Ruby on Rails
Web アプリケーション開発のための「フレームワーク」

Railsで開発を始めるには、「rails new アプリケーション名」というコマンドをターミナルで実行します。
入力したアプリケーション名と同名のフォルダが作成され、その中に開発に必要なフォルダやファイルが用意されます。

開発中のアプリケーションをブラウザで表示するためには、サーバーというものを起動する必要があります。
「rails server」というコマンドを実行するだけで完了です。URLにアクセスすると、初期画面が表示されるようになります。

トップページを作成するには、「rails generate controller home top」
というコマンドをターミナルで実行します。
「localhost:3000/home/top」というURLにアクセスできるようになります。
#############################################################################################################################
ページ作成に必要なもの
①ビュー
ページの「見た目」を作るためのHTMLファイル。ブラウザとRailsのやりとりの中で、Railsからビューが返され、ページが表示されます。
②コントローラ
ページを表示するとき、Railsの中ではコントローラを経由してビューをブラウザに返しています。コントローラ内のメソッドを「アクション」と呼びます。
コントローラ内のアクションは、ブラウザに返すビューをviewsフォルダの中から見つけ出す役割を担っています。具体的には、アクションは、
コントローラと同じ名前のビューフォルダから、アクションと同じ名前のHTMLファイルを探してブラウザに返します。
③ルーティング
ルーティングは、送信されたURLに対して「どのコントローラの、
どのアクション」で処理するかを決める「対応表」のことです。
ブラウザでURLを入力すると、ルーティングがURLを見て、適切なコントローラのアクションを呼び出します。
#############################################################################################################################################

ルーティングを書き換えることで、トップページのURLを変更することが
できます。
URLを変更しても、"home#top" の部分が変わらない限りhomeコントローラのtopアクションに対応するビューファイル
（= top.html.erb）の内容がブラウザに表示されます。

#変更前
Rails.application.routes.draw do
    get "home/top" => "home#top"
  end
#localhost:3000/topにアクセスできるように変更する
Rails.application.routes.draw do
    get "top" => "home#top"
  end  
#######################################################################################################################

トップページを作るときに入力したコマンドは「コントローラ名」と「アクション名」を含む
「rails generate controller コントローラ名 アクション名」を実行することで、コントローラと、それに対応したファイルが自動で用意されます。
同じ名前のコントローラがすでにある場合は、このコマンドを使うことはできません。
$ rails generate controller home top    →homeコントローラとそれに対応するファイルが自動再生される
$ rails generate controller home acout　→homeコントローラは既に作られているのでこのコマンドは使えない。

#######################################################################################################################
ので、新しいページを作るにはコマンドで自動生成されていたルーティング、コントローラ (アクション)、ビューを自分で用意する必要がある

CSSファイル
「rails generate controller home ...」コマンドを実行したときに、(home.scss)も自動生成されます。 
「scss」はCSSを拡張したもので、CSSを効率的に書く文法も使用できますが、このレッスンではCSSの文法のみを用いていきます。
Railsでは、「stylesheets」フォルダの中に保存されているCSSファイルに
コードを書けば、すべてのビューにCSSが適用されます。
#################################################################################################################################

画像は、「public」フォルダに配置しておくと、「<img src="/画像名" >」や「background-image: url("/画像名");」のように、
画像名を指定するだけで、簡単に画像を表示することができます。必ず/つけるんだよ！
#######################################################################################################################

「localhost:3000」 (後ろに/○○がないURL) に対応するルーティングは、
「get "/" => "コントローラ名#アクション名"」というように、URLに"/"を
指定します。
##########################################################################################################################

リンクを作る。
<a>タグでテキストを囲み、「href=" "」の中にURLを指定する必要があったことを思い出しましょう。
hrefの中身をルーティングのURL部分と同じにすることで、簡単にリンク先を指定することができます。

ビューファイルにて



